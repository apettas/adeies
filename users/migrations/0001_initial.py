# Generated by Django 5.2.3 on 2025-06-14 07:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("core_app", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Όνομα ρόλου"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Περιγραφή")),
                (
                    "permissions",
                    models.JSONField(default=dict, verbose_name="Δικαιώματα"),
                ),
                (
                    "is_system_role",
                    models.BooleanField(default=False, verbose_name="Ρόλος συστήματος"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Ενεργός"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Ρόλος",
                "verbose_name_plural": "Ρόλοι",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "is_employee",
                    models.BooleanField(default=False, verbose_name="Είναι υπάλληλος"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Χρήστης",
                "verbose_name_plural": "Χρήστες",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_in_accusative",
                    models.CharField(max_length=100, verbose_name="Όνομα (αιτιατική)"),
                ),
                (
                    "surname_in_accusative",
                    models.CharField(
                        max_length=100, verbose_name="Επώνυμο (αιτιατική)"
                    ),
                ),
                (
                    "father_name_in_genitive",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Πατρώνυμο (γενική)"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("Άνδρας", "Άνδρας"), ("Γυναίκα", "Γυναίκα")],
                        max_length=10,
                        verbose_name="Φύλο",
                    ),
                ),
                (
                    "sch_email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Το email πρέπει να τελειώνει σε @sch.gr",
                                regex="^[a-zA-Z0-9._%+-]+@sch\\.gr$",
                            )
                        ],
                        verbose_name="Υπηρεσιακό Email (@sch.gr)",
                    ),
                ),
                (
                    "personal_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Προσωπικό Email"
                    ),
                ),
                (
                    "phone1",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Τηλέφωνο 1"
                    ),
                ),
                (
                    "phone2",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Τηλέφωνο 2"
                    ),
                ),
                ("role_description", models.TextField(verbose_name="Περιγραφή ρόλου")),
                (
                    "regular_leave_days",
                    models.PositiveIntegerField(
                        default=24, verbose_name="Ημέρες κανονικής άδειας"
                    ),
                ),
                (
                    "carryover_leave_days",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Μεταφερόμενες ημέρες άδειας"
                    ),
                ),
                (
                    "self_declaration_sick_days_remaining",
                    models.PositiveIntegerField(
                        default=2,
                        verbose_name="Υπόλοιπο ημερών αναρρωτικής με υπ. δήλωση",
                    ),
                ),
                (
                    "notification_recipients",
                    models.TextField(
                        blank=True,
                        help_text="Ονομασίες υπηρεσιών για κοινοποίηση",
                        verbose_name="Παραλήπτες κοινοποίησης",
                    ),
                ),
                (
                    "preferred_notification_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="Προτιμώμενο email ειδοποιήσεων",
                    ),
                ),
                (
                    "schedule",
                    models.CharField(blank=True, max_length=200, verbose_name="Ωράριο"),
                ),
                (
                    "can_request_leave",
                    models.BooleanField(
                        default=True, verbose_name="Δικαίωμα αίτησης άδειας"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Ενεργός"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core_app.service",
                        verbose_name="Τρέχουσα υπηρεσία",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core_app.department",
                        verbose_name="Τμήμα",
                    ),
                ),
                (
                    "employee_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core_app.employeetype",
                        verbose_name="Τύπος υπαλλήλου",
                    ),
                ),
                (
                    "specialty",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core_app.specialty",
                        verbose_name="Ειδικότητα",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Χρήστης",
                    ),
                ),
            ],
            options={
                "verbose_name": "Υπάλληλος",
                "verbose_name_plural": "Υπάλληλοι",
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Ημερομηνία ανάθεσης"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Ενεργός"),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_roles",
                        to="users.employee",
                        verbose_name="Ανατέθηκε από",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.employee",
                        verbose_name="Υπάλληλος",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.role",
                        verbose_name="Ρόλος",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ρόλος Χρήστη",
                "verbose_name_plural": "Ρόλοι Χρηστών",
            },
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["sch_email"], name="users_emplo_sch_ema_d45944_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["current_service"], name="users_emplo_current_edee40_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["department"], name="users_emplo_departm_fd9306_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="employee",
            index=models.Index(
                fields=["is_active"], name="users_emplo_is_acti_5d4e2d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userrole",
            unique_together={("employee", "role")},
        ),
    ]
